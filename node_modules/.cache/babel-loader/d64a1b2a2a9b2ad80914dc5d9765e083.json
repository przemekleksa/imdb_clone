{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gnoos\\\\Documents\\\\GitHub\\\\imdb_clone\\\\src\\\\pages\\\\category\\\\category.js\";\nimport React, { Component } from 'react';\nimport Header from '../../components/header/header';\nimport Loader from '../../components/loader/loader';\nimport { connect } from 'react-redux';\nimport { loadCategoryFromApi } from '../../actions/category';\nimport MovieList from '../../components/movie/movieList';\nimport './category.scss';\n\nclass Category extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.componentDidMount = () => {\n      let cleanCategoryName = this.props.match.params.name;\n      this.props.dispatch(loadCategoryFromApi(cleanCategoryName));\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, !this.props.isLoading && React.createElement(React.Fragment, null, React.createElement(Header, {\n      title: this.props.categoryFromApi.name,\n      breadcrumb: [{\n        name: 'Categories',\n        link: '/categories'\n      }, {\n        name: this.props.categoryFromApi.name,\n        link: '/category/' + this.props.categoryFromApi.clean_name\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, this.props.moviesFromApi.length === 0 ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"Ta kategoria nie ma jeszcze film\\xF3w\") : React.createElement(\"div\", {\n      className: \"movie-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, this.props.moviesFromApi.map((item, key) => React.createElement(MovieList, {\n      movie: item.movie,\n      key: key,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }))))), React.createElement(Loader, {\n      isLoading: this.props.isLoading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    isLoading: state.category.isLoading,\n    categoryFromApi: state.category.categoryApi,\n    moviesFromApi: state.category.moviesApi\n  };\n};\n\nexport default connect(mapStateToProps, null)(Category);","map":{"version":3,"sources":["C:\\Users\\gnoos\\Documents\\GitHub\\imdb_clone\\src\\pages\\category\\category.js"],"names":["React","Component","Header","Loader","connect","loadCategoryFromApi","MovieList","Category","componentDidMount","cleanCategoryName","props","match","params","name","dispatch","render","isLoading","categoryFromApi","link","clean_name","moviesFromApi","length","map","item","key","movie","mapStateToProps","state","category","categoryApi","moviesApi"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAASC,mBAAT,QAAoC,wBAApC;AACA,OAAOC,SAAP,MAAsB,kCAAtB;AACA,OAAO,iBAAP;;AAEA,MAAMC,QAAN,SAAuBN,SAAvB,CAAiC;AAAA;AAAA;;AAAA,SAE7BO,iBAF6B,GAET,MAAM;AACtB,UAAIC,iBAAiB,GAAG,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,IAAhD;AACA,WAAKH,KAAL,CAAWI,QAAX,CAAoBT,mBAAmB,CAACI,iBAAD,CAAvC;AACH,KAL4B;AAAA;;AAO7BM,EAAAA,MAAM,GAAI;AACN,WACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,CAAC,KAAKL,KAAL,CAAWM,SAAZ,IACD,0CACI,oBAAC,MAAD;AACA,MAAA,KAAK,EAAE,KAAKN,KAAL,CAAWO,eAAX,CAA2BJ,IADlC;AAEA,MAAA,UAAU,EAAE,CACR;AACAA,QAAAA,IAAI,EAAE,YADN;AAEAK,QAAAA,IAAI,EAAE;AAFN,OADQ,EAKR;AACIL,QAAAA,IAAI,EAAE,KAAKH,KAAL,CAAWO,eAAX,CAA2BJ,IADrC;AAEIK,QAAAA,IAAI,EAAE,eAAe,KAAKR,KAAL,CAAWO,eAAX,CAA2BE;AAFpD,OALQ,CAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAcC;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKT,KAAL,CAAWU,aAAX,CAAyBC,MAAzB,KAAoC,CAArC,GACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CADH,GAKG;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKX,KAAL,CAAWU,aAAX,CAAyBE,GAAzB,CAA6B,CAACC,IAAD,EAAOC,GAAP,KAAe,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAED,IAAI,CAACE,KAAvB;AAA8B,MAAA,GAAG,EAAED,GAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA5C,CADL,CANP,CAdD,CAFJ,EA8BI,oBAAC,MAAD;AAAQ,MAAA,SAAS,EAAE,KAAKd,KAAL,CAAWM,SAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA9BJ,CADA;AAkCH;;AA1C4B;;AA8CjC,MAAMU,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHX,IAAAA,SAAS,EAAEW,KAAK,CAACC,QAAN,CAAeZ,SADvB;AAEHC,IAAAA,eAAe,EAAEU,KAAK,CAACC,QAAN,CAAeC,WAF7B;AAGHT,IAAAA,aAAa,EAAEO,KAAK,CAACC,QAAN,CAAeE;AAH3B,GAAP;AAKH,CAND;;AAQA,eAAe1B,OAAO,CAACsB,eAAD,EAAkB,IAAlB,CAAP,CAA+BnB,QAA/B,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport Header from '../../components/header/header';\r\nimport Loader from '../../components/loader/loader';\r\nimport {connect} from 'react-redux';\r\nimport { loadCategoryFromApi } from '../../actions/category';\r\nimport MovieList from '../../components/movie/movieList';\r\nimport './category.scss'\r\n\r\nclass Category extends Component {\r\n\r\n    componentDidMount = () => {\r\n        let cleanCategoryName = this.props.match.params.name;\r\n        this.props.dispatch(loadCategoryFromApi(cleanCategoryName));\r\n    }\r\n\r\n    render () {\r\n        return ( \r\n        <div>\r\n            {!this.props.isLoading &&\r\n            <>\r\n                <Header \r\n                title={this.props.categoryFromApi.name} \r\n                breadcrumb={[\r\n                    {\r\n                    name: 'Categories',\r\n                    link: '/categories'\r\n                    },\r\n                    {\r\n                        name: this.props.categoryFromApi.name,\r\n                        link: '/category/' + this.props.categoryFromApi.clean_name\r\n                    },\r\n                ]}\r\n             />\r\n             <div className=\"container\">\r\n                {(this.props.moviesFromApi.length === 0) ? \r\n                    <div>\r\n                        Ta kategoria nie ma jeszcze film√≥w\r\n                    </div>\r\n                    :\r\n                    <div className=\"movie-list\">\r\n                        {this.props.moviesFromApi.map((item, key) => <MovieList movie={item.movie} key={key} />)}\r\n                    </div>\r\n                }\r\n             </div>\r\n             </>\r\n            }\r\n           \r\n            <Loader isLoading={this.props.isLoading}/>\r\n        </div>\r\n     );\r\n    }\r\n    \r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isLoading: state.category.isLoading,\r\n        categoryFromApi: state.category.categoryApi,\r\n        moviesFromApi: state.category.moviesApi\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(Category);"]},"metadata":{},"sourceType":"module"}