{"ast":null,"code":"import axios from 'axios';\nimport { API_URL_USER_REGISTER } from '../constants/const';\nimport { USER_REGISTER_SUCCESS, USER_REGISTER_ERROR, USER_REGISTER_LOADING } from '../constants/actions';\nexport const changeUserLoading = isLoading => {\n  return {\n    type: USER_REGISTER_LOADING,\n    isLoading: isLoading\n  };\n};\nexport const registerUserSuccess = (messageFromApi, statusCodeFromApi) => {\n  return {\n    type: USER_REGISTER_SUCCESS,\n    message: messageFromApi,\n    statusCode: statusCodeFromApi\n  };\n};\nexport const registerUserError = (messageFromApi, statusCodeFromApi) => {\n  return {\n    type: USER_REGISTER_ERROR,\n    message: messageFromApi,\n    statusCode: statusCodeFromApi\n  };\n};\nexport const registerUser = userFormData => {\n  return dispatch => {\n    dispatch(changeUserLoading(true));\n    return axios({\n      method: 'post',\n      url: API_URL_USER_REGISTER,\n      data: userFormData\n    }).then(response => {\n      dispatch(changeUserLoading(false));\n      dispatch(registerUserSuccess(response.data.message, 200));\n    }).catch(error => {\n      const message = error.response.data.message;\n      dispatch(changeUserLoading(false));\n      dispatch(registerUserError(message, 422));\n    });\n  };\n};","map":{"version":3,"sources":["C:\\Users\\gnoos\\Documents\\GitHub\\imdb_clone\\src\\actions\\users.js"],"names":["axios","API_URL_USER_REGISTER","USER_REGISTER_SUCCESS","USER_REGISTER_ERROR","USER_REGISTER_LOADING","changeUserLoading","isLoading","type","registerUserSuccess","messageFromApi","statusCodeFromApi","message","statusCode","registerUserError","registerUser","userFormData","dispatch","method","url","data","then","response","catch","error"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,qBAAT,QAAsC,oBAAtC;AACA,SAASC,qBAAT,EAAgCC,mBAAhC,EAAqDC,qBAArD,QAAkF,sBAAlF;AAEA,OAAO,MAAMC,iBAAiB,GAAIC,SAAD,IAAe;AAC9C,SAAO;AACLC,IAAAA,IAAI,EAAEH,qBADD;AAELE,IAAAA,SAAS,EAAEA;AAFN,GAAP;AAID,CALM;AAOP,OAAO,MAAME,mBAAmB,GAAG,CAACC,cAAD,EAAiBC,iBAAjB,KAAuC;AACxE,SAAO;AACLH,IAAAA,IAAI,EAAEL,qBADD;AAELS,IAAAA,OAAO,EAAEF,cAFJ;AAGLG,IAAAA,UAAU,EAAEF;AAHP,GAAP;AAKD,CANM;AAQP,OAAO,MAAMG,iBAAiB,GAAG,CAACJ,cAAD,EAAiBC,iBAAjB,KAAuC;AACtE,SAAO;AACLH,IAAAA,IAAI,EAAEJ,mBADD;AAELQ,IAAAA,OAAO,EAAEF,cAFJ;AAGLG,IAAAA,UAAU,EAAEF;AAHP,GAAP;AAKD,CANM;AAQP,OAAO,MAAMI,YAAY,GAAIC,YAAD,IAAkB;AAC5C,SAAQC,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAACX,iBAAiB,CAAC,IAAD,CAAlB,CAAR;AACA,WAAOL,KAAK,CAAC;AACXiB,MAAAA,MAAM,EAAE,MADG;AAEXC,MAAAA,GAAG,EAAEjB,qBAFM;AAGXkB,MAAAA,IAAI,EAAEJ;AAHK,KAAD,CAAL,CAIJK,IAJI,CAIEC,QAAD,IAAc;AACpBL,MAAAA,QAAQ,CAACX,iBAAiB,CAAC,KAAD,CAAlB,CAAR;AACAW,MAAAA,QAAQ,CAACR,mBAAmB,CAACa,QAAQ,CAACF,IAAT,CAAcR,OAAf,EAAwB,GAAxB,CAApB,CAAR;AACD,KAPM,EAOJW,KAPI,CAOGC,KAAD,IAAW;AAAA,YACXZ,OADW,GACAY,KAAK,CAACF,QAAN,CAAeF,IADf,CACXR,OADW;AAElBK,MAAAA,QAAQ,CAACX,iBAAiB,CAAC,KAAD,CAAlB,CAAR;AACAW,MAAAA,QAAQ,CAACH,iBAAiB,CAACF,OAAD,EAAU,GAAV,CAAlB,CAAR;AACD,KAXM,CAAP;AAYD,GAdD;AAeD,CAhBM","sourcesContent":["import axios from 'axios';\r\nimport { API_URL_USER_REGISTER } from '../constants/const';\r\nimport { USER_REGISTER_SUCCESS, USER_REGISTER_ERROR, USER_REGISTER_LOADING } from '../constants/actions';\r\n\r\nexport const changeUserLoading = (isLoading) => {\r\n  return {\r\n    type: USER_REGISTER_LOADING,\r\n    isLoading: isLoading\r\n  }\r\n};\r\n\r\nexport const registerUserSuccess = (messageFromApi, statusCodeFromApi) => {\r\n  return {\r\n    type: USER_REGISTER_SUCCESS,\r\n    message: messageFromApi,\r\n    statusCode: statusCodeFromApi\r\n  }\r\n};\r\n\r\nexport const registerUserError = (messageFromApi, statusCodeFromApi) => {\r\n  return {\r\n    type: USER_REGISTER_ERROR,\r\n    message: messageFromApi,\r\n    statusCode: statusCodeFromApi\r\n  }\r\n};\r\n\r\nexport const registerUser = (userFormData) => {\r\n  return (dispatch) => {\r\n    dispatch(changeUserLoading(true));\r\n    return axios({\r\n      method: 'post',\r\n      url: API_URL_USER_REGISTER,\r\n      data: userFormData\r\n    }).then((response) => {\r\n      dispatch(changeUserLoading(false));\r\n      dispatch(registerUserSuccess(response.data.message, 200))\r\n    }).catch((error) => {\r\n      const {message} = error.response.data;\r\n      dispatch(changeUserLoading(false));\r\n      dispatch(registerUserError(message, 422))\r\n    })\r\n  }\r\n}; "]},"metadata":{},"sourceType":"module"}