{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gnoos\\\\Documents\\\\GitHub\\\\imdb_clone\\\\src\\\\pages\\\\categories\\\\categories.js\";\nimport React, { Component } from 'react';\nimport Header from '../../components/header/header';\nimport './categories.scss';\nimport Loader from '../../components/loader/loader';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { loadCategoriesFromApi } from '../../actions/categories';\n\nclass Categories extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isLoading: true,\n      categoriesApi: {},\n      filterLetter: \"\"\n    };\n\n    this.componentDidMount = () => {\n      this.props.dispatch(loadCategoriesFromApi());\n    };\n\n    this.filterByLetter = letter => {\n      this.setState({\n        filterLetter: letter\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(Header, {\n      title: \"Categories list\",\n      breadcrumb: [{\n        name: 'Categories',\n        link: '/categories'\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(Loader, {\n      isLoading: this.props.isLoading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }), !this.props.isLoading && React.createElement(\"div\", {\n      className: \"categoriesList\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"Category list\"), React.createElement(\"ul\", {\n      className: \"filter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      onClick: () => this.filterByLetter(\"\"),\n      className: this.state.filterLetter === \"\" && 'active',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"All\"), React.createElement(\"li\", {\n      onClick: () => this.filterByLetter(\"A\"),\n      className: this.state.filterLetter === \"A\" && 'active',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"A\"), React.createElement(\"li\", {\n      onClick: () => this.filterByLetter(\"B\"),\n      className: this.state.filterLetter === \"B\" && 'active',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"B\"), React.createElement(\"li\", {\n      onClick: () => this.filterByLetter(\"C\"),\n      className: this.state.filterLetter === \"C\" && 'active',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"C\")), React.createElement(\"div\", {\n      className: \"categories\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, this.props.categoriesApi.filter(item => {\n      if (this.state.filterLetter === \"\") {\n        return true;\n      } else {\n        return item.name[0].toUpperCase() === this.state.filterLetter;\n      }\n    }).map((item, key) => {\n      return React.createElement(\"div\", {\n        className: \"category\",\n        key: key,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/category/\".concat(item.clean_name),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, item.name));\n    })))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    isLoading: state.categories.isLoading,\n    categoriesApi: state.categories.categoriesApi\n  };\n};\n\nexport default connect(mapStateToProps, null)(Categories);","map":{"version":3,"sources":["C:\\Users\\gnoos\\Documents\\GitHub\\imdb_clone\\src\\pages\\categories\\categories.js"],"names":["React","Component","Header","Loader","Link","connect","loadCategoriesFromApi","Categories","state","isLoading","categoriesApi","filterLetter","componentDidMount","props","dispatch","filterByLetter","letter","setState","render","name","link","filter","item","toUpperCase","map","key","clean_name","mapStateToProps","categories"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Header from '../../components/header/header';\r\nimport './categories.scss'\r\nimport Loader from '../../components/loader/loader';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { loadCategoriesFromApi } from  '../../actions/categories';\r\n\r\nclass Categories extends Component {\r\n    state = {\r\n        isLoading: true,\r\n        categoriesApi: {},\r\n        filterLetter: \"\"\r\n    }\r\n\r\n    componentDidMount = () => {\r\n       this.props.dispatch(loadCategoriesFromApi());\r\n    }\r\n\r\n    filterByLetter = (letter) => {\r\n        this.setState({\r\n            filterLetter: letter,\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return ( \r\n            <div >\r\n                <Header \r\n                title=\"Categories list\" \r\n                breadcrumb={[\r\n                    {\r\n                    name: 'Categories',\r\n                    link: '/categories'\r\n                    }\r\n                ]}\r\n                \r\n                />\r\n                <div className=\"container\">\r\n                <Loader isLoading={this.props.isLoading}/>\r\n                {!this.props.isLoading &&\r\n                    <div className=\"categoriesList\">\r\n                        <h1>Category list</h1>\r\n                        <ul className=\"filter\">\r\n                            <li onClick={() => this.filterByLetter(\"\")} className={this.state.filterLetter === \"\" && 'active'}>\r\n                                All\r\n                            </li>\r\n                            <li onClick={() => this.filterByLetter(\"A\")}  className={this.state.filterLetter === \"A\" && 'active'}>\r\n                                A\r\n                            </li>\r\n                            <li onClick={() => this.filterByLetter(\"B\")}  className={this.state.filterLetter === \"B\" && 'active'}>\r\n                                B\r\n                            </li>\r\n                            <li  onClick={() => this.filterByLetter(\"C\")} className={this.state.filterLetter === \"C\" && 'active'}>\r\n                                C\r\n                            </li>\r\n                        </ul>\r\n                        <div className=\"categories\">\r\n                            {this.props.categoriesApi.filter((item) => {\r\n                                if (this.state.filterLetter === \"\"){\r\n                                    return true\r\n                                } else {\r\n                                    return (item.name[0].toUpperCase() === this.state.filterLetter)\r\n                                }\r\n                            }).map((item, key) => {\r\n                                return (\r\n                                    <div className=\"category\" key={key}>\r\n                                        <Link to={`/category/${item.clean_name}`} >\r\n                                        {item.name}\r\n                                        </Link>\r\n                                    </div>\r\n                                )\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                }\r\n                </div>\r\n                \r\n            </div>\r\n         );\r\n    }\r\n    \r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isLoading: state.categories.isLoading,\r\n        categoriesApi: state.categories.categoriesApi\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(Categories);"]},"metadata":{},"sourceType":"module"}