{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gnoos\\\\Documents\\\\GitHub\\\\imdb_clone\\\\src\\\\pages\\\\login\\\\login.js\";\nimport React, { Component } from 'react';\nimport './login.scss';\nimport { Formik, Form, Field } from 'formik';\nimport { connect } from 'react-redux';\nimport * as Yup from 'yup';\nimport Loader from '../../components/loader/loader';\nimport { login, clearLoginState } from '../../actions/auth';\nimport { Redirect } from 'react-router-dom';\nconst LoginSchema = Yup.object().shape({\n  email: Yup.string().required('Podaj adres e-mail').email('Podany adres e-mail jest nieprawidłowy'),\n  password: Yup.string().required('Podaj hasło').min(5, 'Hasło musi być dłuższe niż 4 znaki')\n});\n\nclass LoginPage extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.componentWillUnmount = () => {\n      this.props.dispatch(clearLoginState());\n    };\n  }\n\n  render() {\n    if (this.props.isLogin) {\n      return React.createElement(Redirect, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \"Logowanie\"), React.createElement(Loader, {\n      isLoading: this.props.isLoading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }), this.props.statusCode === 200 && !this.props.isLoading && this.props.message.length && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, this.props.message), this.props.statusCode === 401 && !this.props.isLoading && this.props.message.length && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, this.props.message), React.createElement(Formik, {\n      initialValues: {\n        email: '',\n        password: ''\n      },\n      validationSchema: LoginSchema,\n      onSubmit: values => {\n        this.props.dispatch(login(values));\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, ({\n      errors,\n      touched\n    }) => React.createElement(Form, {\n      className: \"login-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"E-mail\"), React.createElement(Field, {\n      name: \"email\",\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), errors.email && touched.email && React.createElement(\"p\", {\n      className: \"error-message\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, errors.email), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Has\\u0142o\"), React.createElement(Field, {\n      name: \"password\",\n      type: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), errors.password && touched.password && React.createElement(\"p\", {\n      className: \"error-message\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, errors.password), React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Zaloguj si\\u0119\")))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    isLogin: state.auth.isLogin,\n    isLoading: state.auth.isLoading,\n    statusCode: state.auth.statusCode,\n    message: state.auth.message\n  };\n};\n\nexport default connect(mapStateToProps, null)(LoginPage); // export default LoginPage;","map":{"version":3,"sources":["C:\\Users\\gnoos\\Documents\\GitHub\\imdb_clone\\src\\pages\\login\\login.js"],"names":["React","Component","Formik","Form","Field","connect","Yup","Loader","login","clearLoginState","Redirect","LoginSchema","object","shape","email","string","required","password","min","LoginPage","componentWillUnmount","props","dispatch","render","isLogin","isLoading","statusCode","message","length","values","errors","touched","mapStateToProps","state","auth"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport './login.scss';\r\nimport { Formik, Form, Field } from 'formik';\r\nimport { connect } from 'react-redux';\r\nimport * as Yup from 'yup';\r\nimport Loader from '../../components/loader/loader';\r\nimport { login, clearLoginState } from '../../actions/auth';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nconst LoginSchema = Yup.object().shape({\r\n  email: Yup.string()\r\n    .required('Podaj adres e-mail')\r\n    .email('Podany adres e-mail jest nieprawidłowy'),\r\n  password: Yup.string().required('Podaj hasło')\r\n    .min(5, 'Hasło musi być dłuższe niż 4 znaki')\r\n});\r\n\r\nclass LoginPage extends Component {\r\n  componentWillUnmount = () => {\r\n    this.props.dispatch(clearLoginState());\r\n  }\r\n  render() {\r\n\r\n    if(this.props.isLogin) {\r\n      return <Redirect to=\"/\" />\r\n    }\r\n\r\n    return (\r\n      <div className=\"container\">\r\n          <h1>Logowanie</h1>\r\n          <Loader isLoading={this.props.isLoading} />\r\n\r\n          {(this.props.statusCode === 200 &&\r\n            !this.props.isLoading &&\r\n            this.props.message.length\r\n            ) &&\r\n            <div>\r\n              {this.props.message}\r\n              </div>\r\n            }\r\n\r\n            {(this.props.statusCode === 401 &&\r\n            !this.props.isLoading &&\r\n            this.props.message.length\r\n            ) &&\r\n            <div>\r\n              {this.props.message}\r\n            </div>\r\n            }\r\n\r\n          <Formik\r\n            initialValues={{\r\n              email: '',\r\n              password: ''\r\n            }}\r\n            validationSchema={LoginSchema}\r\n            onSubmit={(values) => {\r\n              this.props.dispatch(login(values))\r\n            }}\r\n          >\r\n\r\n            {({ errors, touched }) => (\r\n              <Form className=\"login-form\">\r\n\r\n\r\n                <div className=\"row\">\r\n                  <label>E-mail</label>\r\n                  <Field name=\"email\" type=\"text\" />\r\n                  {(errors.email && touched.email) &&\r\n                  <p className=\"error-message\">\r\n                    {errors.email}\r\n                  </p>\r\n                  }\r\n\r\n                  <label>Hasło</label>\r\n                  <Field name=\"password\" type=\"password\" />\r\n                  {(errors.password && touched.password) &&\r\n                  <p className=\"error-message\">\r\n                    {errors.password}\r\n                  </p>\r\n                  }\r\n\r\n                  <button type=\"submit\">Zaloguj się</button>\r\n                </div>\r\n\r\n              </Form>\r\n            )}\r\n\r\n          </Formik>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isLogin: state.auth.isLogin,\r\n    isLoading: state.auth.isLoading,\r\n    statusCode: state.auth.statusCode,\r\n    message: state.auth.message\r\n  }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, null)(LoginPage);\r\n// export default LoginPage;"]},"metadata":{},"sourceType":"module"}