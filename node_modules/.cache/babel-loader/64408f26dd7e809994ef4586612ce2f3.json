{"ast":null,"code":"import axios from \"axios\";\nimport { API_URL_USER_LOGIN, API_URL_GET_AUTH_USER } from \"../constants/const\";\nimport { USER_LOGIN_ERROR, USER_LOGIN_SUCCESS, USER_LOGIN_LOADING, USER_LOGOUT, USER_LOGIN_RESET_STATE } from \"../constants/actions\";\nimport setAuthToken from \"../utils/setAuth\";\nexport const login = authCredentials => {\n  return dispatch => {\n    dispatch(changeLoginLoading(true));\n    return axios({\n      method: 'post',\n      url: API_URL_USER_LOGIN,\n      data: authCredentials\n    }).then(response => {\n      dispatch(changeLoginLoading(false));\n      dispatch(userLoginSuccess(200, response.data.message, response.data.user));\n      localStorage.setItem('token', response.data.token);\n      setAuthToken(response.data.token);\n    }).catch(error => {\n      dispatch(changeLoginLoading(false));\n      dispatch(userLoginError(401, error.response.data.message));\n      localStorage.removeItem('token');\n      setAuthToken(false);\n    });\n  };\n};\nexport const changeLoginLoading = isLoading => {\n  return {\n    type: USER_LOGIN_LOADING,\n    isLoading: isLoading\n  };\n};\nexport const userLoginSuccess = (statusCodeFromApi, messageFromApi, userFromApi) => {\n  return {\n    type: USER_LOGIN_SUCCESS,\n    statusCode: statusCodeFromApi,\n    message: messageFromApi,\n    user: userFromApi\n  };\n};\nexport const userLoginError = (statusCodeFromApi, messageFromApi) => {\n  return {\n    type: USER_LOGIN_ERROR,\n    statusCode: statusCodeFromApi,\n    message: messageFromApi\n  };\n};\nexport const checkToken = () => {\n  return dispatch => {\n    return axios({\n      method: 'post',\n      url: API_URL_GET_AUTH_USER\n    }).then(response => {\n      dispatch(userLoginSuccess(200, response.data.message, response.data.user));\n    }).catch(error => {\n      localStorage.removeItem('token');\n      setAuthToken(false);\n    });\n  };\n};\nexport const logout = () => {\n  localStorage.removeItem('token');\n  setAuthToken(false);\n  return {\n    type: USER_LOGOUT\n  };\n};\nexport const clearLoginState = () => {\n  return {\n    type: USER_LOGIN_RESET_STATE\n  };\n};","map":{"version":3,"sources":["C:\\Users\\gnoos\\Documents\\GitHub\\imdb_clone\\src\\actions\\auth.js"],"names":["axios","API_URL_USER_LOGIN","API_URL_GET_AUTH_USER","USER_LOGIN_ERROR","USER_LOGIN_SUCCESS","USER_LOGIN_LOADING","USER_LOGOUT","USER_LOGIN_RESET_STATE","setAuthToken","login","authCredentials","dispatch","changeLoginLoading","method","url","data","then","response","userLoginSuccess","message","user","localStorage","setItem","token","catch","error","userLoginError","removeItem","isLoading","type","statusCodeFromApi","messageFromApi","userFromApi","statusCode","checkToken","logout","clearLoginState"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport { API_URL_USER_LOGIN, API_URL_GET_AUTH_USER } from \"../constants/const\";\r\nimport {\r\n  USER_LOGIN_ERROR,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGIN_LOADING,\r\n  USER_LOGOUT,\r\n  USER_LOGIN_RESET_STATE\r\n} from \"../constants/actions\";\r\n\r\nimport setAuthToken from \"../utils/setAuth\";\r\n\r\n\r\nexport const login = (authCredentials) => {\r\n  return (dispatch) => {\r\n    dispatch(changeLoginLoading(true));\r\n    return axios({\r\n      method: 'post',\r\n      url: API_URL_USER_LOGIN,\r\n      data: authCredentials\r\n    }).then((response) => {\r\n      dispatch(changeLoginLoading(false));\r\n      dispatch(userLoginSuccess(200, response.data.message, response.data.user));\r\n      localStorage.setItem('token', response.data.token);\r\n      setAuthToken(response.data.token);\r\n    }).catch((error) => {\r\n      dispatch(changeLoginLoading(false));\r\n      dispatch(userLoginError(401, error.response.data.message));\r\n      localStorage.removeItem('token');\r\n      setAuthToken(false);\r\n    })\r\n  }\r\n};\r\n\r\nexport const changeLoginLoading = (isLoading) => {\r\n  return {\r\n    type: USER_LOGIN_LOADING,\r\n    isLoading: isLoading\r\n  }\r\n};\r\n\r\nexport const userLoginSuccess = (statusCodeFromApi, messageFromApi, userFromApi) => {\r\n  return {\r\n    type: USER_LOGIN_SUCCESS,\r\n    statusCode: statusCodeFromApi,\r\n    message: messageFromApi,\r\n    user: userFromApi\r\n  }\r\n};\r\n\r\nexport const userLoginError = (statusCodeFromApi, messageFromApi) => {\r\n  return {\r\n    type: USER_LOGIN_ERROR,\r\n    statusCode: statusCodeFromApi,\r\n    message: messageFromApi\r\n  }\r\n};\r\n\r\n\r\nexport const checkToken = () => {\r\n  return (dispatch) => {\r\n    return axios({\r\n      method: 'post',\r\n      url: API_URL_GET_AUTH_USER\r\n    }).then((response) => {\r\n      dispatch(userLoginSuccess(200, response.data.message, response.data.user));\r\n    }).catch((error) => {\r\n      localStorage.removeItem('token');\r\n      setAuthToken(false);\r\n    })\r\n  }\r\n};\r\n\r\nexport const logout = () => {\r\n  localStorage.removeItem('token');\r\n  setAuthToken(false);\r\n  return {\r\n    type: USER_LOGOUT\r\n  }\r\n};\r\n\r\nexport const clearLoginState = () => {\r\n  return {\r\n    type: USER_LOGIN_RESET_STATE\r\n  }\r\n};"]},"metadata":{},"sourceType":"module"}