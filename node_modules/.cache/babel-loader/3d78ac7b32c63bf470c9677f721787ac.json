{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gnoos\\\\Documents\\\\GitHub\\\\imdb_clone\\\\src\\\\pages\\\\movie\\\\movie.js\";\nimport { Link } from 'react-router-dom';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Loader from '../../components/loader/loader';\nimport { loadMovieFromApi } from '../../actions/movie';\nimport Header from '../../components/header/header';\nimport './movie.scss';\n\nclass Movie extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.componentDidMount = () => {\n      let cleanMovieName = this.props.match.params.name;\n      this.props.dispatch(loadMovieFromApi(cleanMovieName));\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, !this.props.isLoading && React.createElement(React.Fragment, null, React.createElement(Header, {\n      title: this.props.movieFromApi.name,\n      breadcrumb: [{\n        name: 'Movie',\n        link: '/movie'\n      }, {\n        name: this.props.movieFromApi.name,\n        link: '/movie/' + this.props.movieFromApi.clean_name\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"movie\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"poster\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.props.movieFromApi.poster,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, this.props.movieFromApi.name), React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"Year: \", this.props.movieFromApi.year, \" Duration:  \", this.props.movieFromApi.duration), React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, this.props.categoriesFromApi.map((item, key) => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, item.category.name);\n    })), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, this.props.movieFromApi.description))), React.createElement(\"div\", {\n      className: \"galery\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"photo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, this.props.movieFromApi.photos.map((item, key) => {\n      return React.createElement(\"div\", {\n        className: \"photo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: item.photo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: item.photo,\n        alt: item.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      })));\n    }))))), React.createElement(Loader, {\n      isLoading: this.props.isLoading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    isLoading: state.movie.isLoading,\n    movieFromApi: state.movie.movieApi,\n    categoriesFromApi: state.movie.categoriesFromApi\n  };\n};\n\nexport default connect(mapStateToProps, null)(Movie);","map":{"version":3,"sources":["C:\\Users\\gnoos\\Documents\\GitHub\\imdb_clone\\src\\pages\\movie\\movie.js"],"names":["Link","React","Component","connect","Loader","loadMovieFromApi","Header","Movie","componentDidMount","cleanMovieName","props","match","params","name","dispatch","render","isLoading","movieFromApi","link","clean_name","poster","year","duration","categoriesFromApi","map","item","key","category","description","photos","photo","id","mapStateToProps","state","movie","movieApi"],"mappings":";AACA,SAASA,IAAT,QAAqB,kBAArB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,SAASC,gBAAT,QAAiC,qBAAjC;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAO,cAAP;;AAEA,MAAMC,KAAN,SAAoBL,SAApB,CAA8B;AAAA;AAAA;;AAAA,SAC1BM,iBAD0B,GACN,MAAM;AACtB,UAAIC,cAAc,GAAG,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,IAA7C;AACA,WAAKH,KAAL,CAAWI,QAAX,CAAoBT,gBAAgB,CAACI,cAAD,CAApC;AACH,KAJyB;AAAA;;AAK1BM,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,CAAC,KAAKL,KAAL,CAAWM,SAAZ,IACG,0CACG,oBAAC,MAAD;AACK,MAAA,KAAK,EAAE,KAAKN,KAAL,CAAWO,YAAX,CAAwBJ,IADpC;AAEK,MAAA,UAAU,EAAE,CACR;AACAA,QAAAA,IAAI,EAAE,OADN;AAEAK,QAAAA,IAAI,EAAE;AAFN,OADQ,EAKR;AACIL,QAAAA,IAAI,EAAE,KAAKH,KAAL,CAAWO,YAAX,CAAwBJ,IADlC;AAEIK,QAAAA,IAAI,EAAE,YAAY,KAAKR,KAAL,CAAWO,YAAX,CAAwBE;AAF9C,OALQ,CAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,EAcI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,GAAG,EAAE,KAAKT,KAAL,CAAWO,YAAX,CAAwBG,MAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,EAII;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKV,KAAL,CAAWO,YAAX,CAAwBJ,IAA7B,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACW,KAAKH,KAAL,CAAWO,YAAX,CAAwBI,IADnC,kBACqD,KAAKX,KAAL,CAAWO,YAAX,CAAwBK,QAD7E,CAFJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEC,KAAKZ,KAAL,CAAWa,iBAAX,CAA6BC,GAA7B,CAAiC,CAACC,IAAD,EAAOC,GAAP,KAAe;AAC7C,aACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAMD,IAAI,CAACE,QAAL,CAAcd,IAApB,CADH;AAGH,KAJA,CAFD,CALJ,EAYI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKH,KAAL,CAAWO,YAAX,CAAwBW,WAD7B,CAZJ,CAJJ,CADJ,EAwBI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACQ;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,KAAKlB,KAAL,CAAWO,YAAX,CAAwBY,MAAxB,CAA+BL,GAA/B,CAAmC,CAACC,IAAD,EAAOC,GAAP,KAAc;AAC9C,aACI;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAuB,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAED,IAAI,CAACK,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACvB;AAAK,QAAA,GAAG,EAAEL,IAAI,CAACK,KAAf;AAAsB,QAAA,GAAG,EAAEL,IAAI,CAACM,EAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADuB,CAAvB,CADJ;AAMH,KAPA,CADD,CADR,CAxBJ,CAdJ,CAFJ,EAyDI,oBAAC,MAAD;AAAQ,MAAA,SAAS,EAAE,KAAKrB,KAAL,CAAWM,SAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAzDJ,CADJ;AA6DH;;AAnEyB;;AAuE9B,MAAMgB,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHjB,IAAAA,SAAS,EAAEiB,KAAK,CAACC,KAAN,CAAYlB,SADpB;AAEHC,IAAAA,YAAY,EAAEgB,KAAK,CAACC,KAAN,CAAYC,QAFvB;AAGHZ,IAAAA,iBAAiB,EAAEU,KAAK,CAACC,KAAN,CAAYX;AAH5B,GAAP;AAKH,CAND;;AAQA,eAAepB,OAAO,CAAC6B,eAAD,EAAkB,IAAlB,CAAP,CAA+BzB,KAA/B,CAAf","sourcesContent":["\r\nimport { Link } from 'react-router-dom';\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Loader from '../../components/loader/loader';\r\nimport { loadMovieFromApi } from '../../actions/movie';\r\nimport Header from '../../components/header/header';\r\nimport './movie.scss'\r\n\r\nclass Movie extends Component {\r\n    componentDidMount = () => {\r\n        let cleanMovieName = this.props.match.params.name;\r\n        this.props.dispatch(loadMovieFromApi(cleanMovieName));\r\n    }\r\n    render() { \r\n        return ( \r\n            <div >\r\n            {!this.props.isLoading &&\r\n                <>\r\n                   <Header \r\n                        title={this.props.movieFromApi.name} \r\n                        breadcrumb={[\r\n                            {\r\n                            name: 'Movie',\r\n                            link: '/movie'\r\n                            },\r\n                            {\r\n                                name: this.props.movieFromApi.name,\r\n                                link: '/movie/' + this.props.movieFromApi.clean_name\r\n                            },\r\n                        ]}\r\n                    />\r\n                    <div className=\"container\">\r\n                        <div className=\"movie\">\r\n                            <div className=\"poster\">\r\n                                <img src={this.props.movieFromApi.poster} />\r\n                            </div>\r\n                            <div className=\"title\">\r\n                                <h2>{this.props.movieFromApi.name}</h2>\r\n                                <h4>\r\n                                    Year: {this.props.movieFromApi.year} Duration:  {this.props.movieFromApi.duration}\r\n                                </h4>\r\n                                <h5>\r\n                                \r\n                                {this.props.categoriesFromApi.map((item, key) => {\r\n                                    return (\r\n                                       <div>{item.category.name}</div> \r\n                                    )\r\n                                })}</h5>\r\n                                <p>\r\n                                    {this.props.movieFromApi.description}\r\n                                </p>\r\n                            </div>\r\n\r\n                            \r\n                        </div>\r\n                        <div className=\"galery\">\r\n                                <div className=\"photo\">\r\n                                {this.props.movieFromApi.photos.map((item, key) =>{\r\n                                    return (\r\n                                        <div className=\"photo\"><Link to={item.photo}>\r\n                                        <img src={item.photo} alt={item.id} />\r\n                                        \r\n                                        </Link></div>\r\n                                    )\r\n                                })}\r\n                                </div>\r\n                            </div>\r\n                        \r\n                        \r\n                    </div>\r\n                </>\r\n            }\r\n                <Loader isLoading={this.props.isLoading} />\r\n            </div>\r\n         );\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isLoading: state.movie.isLoading,\r\n        movieFromApi: state.movie.movieApi,\r\n        categoriesFromApi: state.movie.categoriesFromApi\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(Movie);"]},"metadata":{},"sourceType":"module"}